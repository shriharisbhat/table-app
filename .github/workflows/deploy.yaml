name: Deploy to S3

on:
  workflow_dispatch:
  # push:
  #   branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}  # This should be the ARN of the github_actions_role
        aws-region: us-east-1

    - name: Configure Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
      
    - name: Install dependencies
      run: npm install

    - name: Extract version from package.json
      id: version
      run: echo "VERSION=$(jq -r '.version' < package.json)" >> $GITHUB_ENV

    - name: Build the app
      run: npm run build

    - name: Archive production artifacts
      run: tar -czf build-${{ env.VERSION }}.tar.gz build/

    - name: Upload versioned build to S3
      run: aws s3 cp build-${{ env.VERSION }}.tar.gz s3://web-app-directive/builds/
    
  terraform-apply:
    runs-on: ubuntu-latest
    needs: deploy
    environment:
      name: production
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}  # This should be the ARN of the github_actions_role
        aws-region: us-east-1

    - name: Terraform init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -var 'react_build_version=${{ env.VERSION }}'

    - name: Terraform Apply
      run: terraform apply -auto-approve -var 'react_build_version=${{ env.VERSION }}'
